/**
 * CrowdLabelAPI
 * API for CrowdLabel
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RankingAnswer model module.
 * @module model/RankingAnswer
 * @version 0.1.0
 */
class RankingAnswer {
    /**
     * Constructs a new <code>RankingAnswer</code>.
     * @alias module:model/RankingAnswer
     * @param ranking {Array.<Number>} 
     */
    constructor(ranking) { 
        
        RankingAnswer.initialize(this, ranking);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, ranking) { 
        obj['ranking'] = ranking;
    }

    /**
     * Constructs a <code>RankingAnswer</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RankingAnswer} obj Optional instance to populate.
     * @return {module:model/RankingAnswer} The populated <code>RankingAnswer</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RankingAnswer();

            if (data.hasOwnProperty('ranking')) {
                obj['ranking'] = ApiClient.convertToType(data['ranking'], ['Number']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RankingAnswer</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RankingAnswer</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of RankingAnswer.RequiredProperties) {
            if (!data[property]) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is an array
        if (!Array.isArray(data['ranking'])) {
            throw new Error("Expected the field `ranking` to be an array in the JSON data but got " + data['ranking']);
        }

        return true;
    }


}

RankingAnswer.RequiredProperties = ["ranking"];

/**
 * @member {Array.<Number>} ranking
 */
RankingAnswer.prototype['ranking'] = undefined;






export default RankingAnswer;

