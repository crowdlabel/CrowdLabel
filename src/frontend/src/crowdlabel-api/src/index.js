/**
 * CrowdLabelAPI
 * API for CrowdLabel
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from './ApiClient';
import Admin from './model/Admin';
import Answer from './model/Answer';
import Answer1 from './model/Answer1';
import AvailabilityRequest from './model/AvailabilityRequest';
import AvailabilityResponse from './model/AvailabilityResponse';
import BoundingBoxAnswer from './model/BoundingBoxAnswer';
import BoundingBoxQuestion from './model/BoundingBoxQuestion';
import Corners from './model/Corners';
import EditEmailRequest from './model/EditEmailRequest';
import EditPasswordRequest from './model/EditPasswordRequest';
import Email from './model/Email';
import ErrorResponse from './model/ErrorResponse';
import HTTPValidationError from './model/HTTPValidationError';
import LocationInner from './model/LocationInner';
import MultiChoiceAnswer from './model/MultiChoiceAnswer';
import MultiChoiceQuestion from './model/MultiChoiceQuestion';
import NewInfo from './model/NewInfo';
import OpenAnswer from './model/OpenAnswer';
import OpenQuestion from './model/OpenQuestion';
import Point from './model/Point';
import Question from './model/Question';
import QuestionsInner from './model/QuestionsInner';
import RankingAnswer from './model/RankingAnswer';
import RankingQuestion from './model/RankingQuestion';
import RegistrationError from './model/RegistrationError';
import RegistrationRequest from './model/RegistrationRequest';
import Requester from './model/Requester';
import Respondent from './model/Respondent';
import ResponseGetMeUsersMeGet from './model/ResponseGetMeUsersMeGet';
import SingleChoiceAnswer from './model/SingleChoiceAnswer';
import SingleChoiceQuestion from './model/SingleChoiceQuestion';
import Task from './model/Task';
import TaskSearchRequest from './model/TaskSearchRequest';
import TaskSearchResponse from './model/TaskSearchResponse';
import Token from './model/Token';
import TransactionRequest from './model/TransactionRequest';
import User from './model/User';
import ValidationError from './model/ValidationError';
import AuthApi from './api/AuthApi';
import DefaultApi from './api/DefaultApi';
import QuestionsApi from './api/QuestionsApi';
import TasksApi from './api/TasksApi';
import UsersApi from './api/UsersApi';


/**
* API for CrowdLabel.<br>
* The <code>index</code> module provides access to constructors for all the classes which comprise the public API.
* <p>
* An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:
* <pre>
* var CrowdLabelApi = require('index'); // See note below*.
* var xxxSvc = new CrowdLabelApi.XxxApi(); // Allocate the API class we're going to use.
* var yyyModel = new CrowdLabelApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})
* and put the application logic within the callback function.</em>
* </p>
* <p>
* A non-AMD browser application (discouraged) might do something like this:
* <pre>
* var xxxSvc = new CrowdLabelApi.XxxApi(); // Allocate the API class we're going to use.
* var yyy = new CrowdLabelApi.Yyy(); // Construct a model instance.
* yyyModel.someProperty = 'someValue';
* ...
* var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.
* ...
* </pre>
* </p>
* @module index
* @version 0.1.0
*/
export {
    /**
     * The ApiClient constructor.
     * @property {module:ApiClient}
     */
    ApiClient,

    /**
     * The Admin model constructor.
     * @property {module:model/Admin}
     */
    Admin,

    /**
     * The Answer model constructor.
     * @property {module:model/Answer}
     */
    Answer,

    /**
     * The Answer1 model constructor.
     * @property {module:model/Answer1}
     */
    Answer1,

    /**
     * The AvailabilityRequest model constructor.
     * @property {module:model/AvailabilityRequest}
     */
    AvailabilityRequest,

    /**
     * The AvailabilityResponse model constructor.
     * @property {module:model/AvailabilityResponse}
     */
    AvailabilityResponse,

    /**
     * The BoundingBoxAnswer model constructor.
     * @property {module:model/BoundingBoxAnswer}
     */
    BoundingBoxAnswer,

    /**
     * The BoundingBoxQuestion model constructor.
     * @property {module:model/BoundingBoxQuestion}
     */
    BoundingBoxQuestion,

    /**
     * The Corners model constructor.
     * @property {module:model/Corners}
     */
    Corners,

    /**
     * The EditEmailRequest model constructor.
     * @property {module:model/EditEmailRequest}
     */
    EditEmailRequest,

    /**
     * The EditPasswordRequest model constructor.
     * @property {module:model/EditPasswordRequest}
     */
    EditPasswordRequest,

    /**
     * The Email model constructor.
     * @property {module:model/Email}
     */
    Email,

    /**
     * The ErrorResponse model constructor.
     * @property {module:model/ErrorResponse}
     */
    ErrorResponse,

    /**
     * The HTTPValidationError model constructor.
     * @property {module:model/HTTPValidationError}
     */
    HTTPValidationError,

    /**
     * The LocationInner model constructor.
     * @property {module:model/LocationInner}
     */
    LocationInner,

    /**
     * The MultiChoiceAnswer model constructor.
     * @property {module:model/MultiChoiceAnswer}
     */
    MultiChoiceAnswer,

    /**
     * The MultiChoiceQuestion model constructor.
     * @property {module:model/MultiChoiceQuestion}
     */
    MultiChoiceQuestion,

    /**
     * The NewInfo model constructor.
     * @property {module:model/NewInfo}
     */
    NewInfo,

    /**
     * The OpenAnswer model constructor.
     * @property {module:model/OpenAnswer}
     */
    OpenAnswer,

    /**
     * The OpenQuestion model constructor.
     * @property {module:model/OpenQuestion}
     */
    OpenQuestion,

    /**
     * The Point model constructor.
     * @property {module:model/Point}
     */
    Point,

    /**
     * The Question model constructor.
     * @property {module:model/Question}
     */
    Question,

    /**
     * The QuestionsInner model constructor.
     * @property {module:model/QuestionsInner}
     */
    QuestionsInner,

    /**
     * The RankingAnswer model constructor.
     * @property {module:model/RankingAnswer}
     */
    RankingAnswer,

    /**
     * The RankingQuestion model constructor.
     * @property {module:model/RankingQuestion}
     */
    RankingQuestion,

    /**
     * The RegistrationError model constructor.
     * @property {module:model/RegistrationError}
     */
    RegistrationError,

    /**
     * The RegistrationRequest model constructor.
     * @property {module:model/RegistrationRequest}
     */
    RegistrationRequest,

    /**
     * The Requester model constructor.
     * @property {module:model/Requester}
     */
    Requester,

    /**
     * The Respondent model constructor.
     * @property {module:model/Respondent}
     */
    Respondent,

    /**
     * The ResponseGetMeUsersMeGet model constructor.
     * @property {module:model/ResponseGetMeUsersMeGet}
     */
    ResponseGetMeUsersMeGet,

    /**
     * The SingleChoiceAnswer model constructor.
     * @property {module:model/SingleChoiceAnswer}
     */
    SingleChoiceAnswer,

    /**
     * The SingleChoiceQuestion model constructor.
     * @property {module:model/SingleChoiceQuestion}
     */
    SingleChoiceQuestion,

    /**
     * The Task model constructor.
     * @property {module:model/Task}
     */
    Task,

    /**
     * The TaskSearchRequest model constructor.
     * @property {module:model/TaskSearchRequest}
     */
    TaskSearchRequest,

    /**
     * The TaskSearchResponse model constructor.
     * @property {module:model/TaskSearchResponse}
     */
    TaskSearchResponse,

    /**
     * The Token model constructor.
     * @property {module:model/Token}
     */
    Token,

    /**
     * The TransactionRequest model constructor.
     * @property {module:model/TransactionRequest}
     */
    TransactionRequest,

    /**
     * The User model constructor.
     * @property {module:model/User}
     */
    User,

    /**
     * The ValidationError model constructor.
     * @property {module:model/ValidationError}
     */
    ValidationError,

    /**
    * The AuthApi service constructor.
    * @property {module:api/AuthApi}
    */
    AuthApi,

    /**
    * The DefaultApi service constructor.
    * @property {module:api/DefaultApi}
    */
    DefaultApi,

    /**
    * The QuestionsApi service constructor.
    * @property {module:api/QuestionsApi}
    */
    QuestionsApi,

    /**
    * The TasksApi service constructor.
    * @property {module:api/TasksApi}
    */
    TasksApi,

    /**
    * The UsersApi service constructor.
    * @property {module:api/UsersApi}
    */
    UsersApi
};
